
/*
Constants from memcached binary protocol docs
https://github.com/couchbase/memcached/blob/master/docs/BinaryProtocol.md#0x0d-getkq-get-with-key-quietly

Note: not all constants in here are implemented in this library, not all constants from the docs are included here
*/

exports.OP_GET = 0x00;
exports.OP_SET = 0x01;
exports.OP_ADD = 0x02;
exports.OP_REPLACE = 0x03;
exports.OP_DELETE = 0x04;
exports.OP_INCREMENT = 0x05;
exports.OP_DECREMENT = 0x06;
exports.OP_QUIT = 0x07;
exports.OP_FLUSH = 0x08;
exports.OP_GETQ = 0x09;
exports.OP_NO_OP = 0x0A;
exports.OP_VERSION = 0x0B;
exports.OP_GETK = 0x0C;
exports.OP_GETKQ = 0x0D;
exports.OP_APPEND = 0x0E;
exports.OP_PREPEND = 0x0F;
exports.OP_STAT = 0x10;
exports.OP_SETQ = 0x11;
exports.OP_ADDQ = 0x12;
exports.OP_REPLACEQ = 0x13;
exports.OP_DELETEQ = 0x14;
exports.OP_INCREMENTQ = 0x15;
exports.OP_DECREMENTQ = 0x16;
exports.OP_QUITQ = 0x17;
exports.OP_FLUSHQ = 0x18;
exports.OP_APPENDQ = 0x19;
exports.OP_PREPENDQ = 0x1A;
exports.OP_VERBOSITY = 0x1B;
exports.OP_TOUCH = 0x1C;
exports.OP_GAT = 0x1D;
exports.OP_GATQ = 0x1E;
exports.OP_HELO = 0x1F;
exports.OP_SASL_LIST_MECHS = 0x20;
exports.OP_SASL_AUTH = 0x21;
exports.OP_SASL_STEP = 0x22;
exports.OP_IOCTL_GET = 0x23;
exports.OP_IOCTL_SET = 0x24;
exports.OP_CONFIG_VALIDATE = 0x25;
exports.OP_CONFIG_RELOAD = 0x26;
exports.OP_AUDIT_PUT = 0x27;
exports.OP_AUDIT_CONFIG_RELOAD = 0x28;
exports.OP_SHUTDOWN = 0x29;
exports.OP_RGET = 0x30;
exports.OP_RSET = 0x31;
exports.OP_RSETQ = 0x32;
exports.OP_RAPPEND = 0x33;
exports.OP_RAPPENDQ = 0x34;
exports.OP_RPREPEND = 0x35;
exports.OP_RPREPENDQ = 0x36;
exports.OP_RDELETE = 0x37;
exports.OP_RDELETEQ = 0x38;
exports.OP_RINCR = 0x39;
exports.OP_RINCRQ = 0x3A;
exports.OP_RDECR = 0x3B;
exports.OP_RDECRQ = 0x3C;
exports.OP_SET_VBUCKET = 0x3D;
exports.OP_GET_VBUCKET = 0x3E;
exports.OP_DEL_VBUCKET = 0x3F;
exports.OP_TAP_CONNECT = 0x40;
exports.OP_TAP_MUTATION = 0x41;
exports.OP_TAP_DELETE = 0x42;
exports.OP_TAP_FLUSH = 0x43;
exports.OP_TAP_OPAQUE = 0x44;
exports.OP_TAP_VBUCKET_SET = 0x45;
exports.OP_TAP_CHECKOUT_START = 0x46;
exports.OP_TAP_CHECKPOINT_END = 0x47;
exports.OP_GET_ALL_VB_SEQNOS = 0x48;
exports.OP_DCP_OPEN = 0x50;
exports.OP_DCP_ADD_STREAM = 0x51;
exports.OP_DCP_CLOSE_STREAM = 0x52;
exports.OP_DCP_STREAM_REQ = 0x53;
exports.OP_DCP_GET_FAILOVER_LOG = 0x54;
exports.OP_DCP_STREAM_END = 0x55;
exports.OP_DCP_SNAPSHOT_MARKER = 0x56;
exports.OP_DCP_MUTATION = 0x57;
exports.OP_DCP_DELETION = 0x58;
exports.OP_DCP_EXPIRATION = 0x59;
exports.OP_DCP_FLUSH = 0x5A;
exports.OP_DCP_SET_VBUCKET_STATE = 0x5B;
exports.OP_DCP_NOOP = 0x5C;
exports.OP_DCP_BUFFER_ACKNOWLEDGEMENT = 0x5D;
exports.OP_DCP_CONTROL = 0x5E;
exports.OP_DCP_RESERVED4 = 0x5F;
exports.OP_STOP_PERSISTENCE = 0x80;
exports.OP_START_PERSISTENCE = 0x81;
exports.OP_SET_PARAM = 0x82;
exports.OP_GET_REPLICA = 0x83;
exports.OP_CREATE_BUCKET = 0x85;
exports.OP_DELETE_BUCKET = 0x86;
exports.OP_LIST_BUCKETS = 0x87;
exports.OP_SELECT_BUCKET = 0x89;
exports.OP_ASSUME_ROLE = 0x8A;
exports.OP_OBSERVE_SEQNO = 0x91;
exports.OP_OBSERVE = 0x92;
exports.OP_EVICT_KEY = 0x93;
exports.OP_GET_LOCKED = 0x94;
exports.OP_UNLOCK_KEY = 0x95;
exports.OP_LAST_CLOSED_CHECKPOINT = 0x97;
exports.OP_DEREGISTER_TAP_CLIENT = 0x9E;
exports.OP_RESET_REPLICATION_CHAIN = 0x9F;
exports.OP_GET_META = 0xA0;
exports.OP_GETQ_META = 0xA1;
exports.OP_SET_WITH_META = 0xA2;
exports.OP_SETQ_WITH_META = 0xA3;
exports.OP_ADD_WITH_META = 0xA4;
exports.OP_ADDQ_WITH_META = 0xA5;
exports.OP_SNAPSHOT_VB_STATES = 0xA6;
exports.OP_VBUCKET_BATCH_COUNT = 0xA7;
exports.OP_DEL_WITH_META = 0xA8;
exports.OP_DELQ_WITH_META = 0xA9;
exports.OP_CREATE_CHECKPOINT = 0xAA;
exports.OP_NOTIFY_VBUCKET_UPDATE = 0xAC;
exports.OP_ENABLE_TRAFFIC = 0xAD;
exports.OP_DISABLE_TRAFFIC = 0xAE;
exports.OP_CHANGE_VB_FILTER = 0xB0;
exports.OP_CHECKPOINT_PERSISTENCE = 0xB1;
exports.OP_RETURN_META = 0xB2;
exports.OP_COMPACT_DB = 0xB3;
exports.OP_SET_CLUSTER_CONFIG = 0xB4;
exports.OP_GET_CLUSTER_CONFIG = 0xB5;
exports.OP_GET_RANDOM_KEY = 0xB6;
exports.OP_SEQNO_PERSISTENCE = 0xB7;
exports.OP_GET_KEYS = 0xB8;
exports.OP_SET_DRIFT_COUNTER_STATE = 0xC1;
exports.OP_GET_ADJUSTED_TIME = 0xC2;
exports.OP_SUBDOC_GET = 0xC5;
exports.OP_SUBDOC_EXISTS = 0xC6;
exports.OP_SUBDOC_DICT_ADD = 0xC7;
exports.OP_SUBDOC_DICT_UPSERT = 0xC8;
exports.OP_SUBDOC_DELETE = 0xC9;
exports.OP_SUBDOC_REPLACE = 0xCA;
exports.OP_SUBDOC_ARRAY_PUSH_LAST = 0xCB;
exports.OP_SUBDOC_ARRAY_PUSH_FIRST = 0xCC;
exports.OP_SUBDOC_ARRAY_INSERT = 0xCD;
exports.OP_SUBDOC_ARRAY_ADD_UNIQUE = 0xCE;
exports.OP_SUBDOC_COUNTER = 0xCF;
exports.OP_SUBDOC_MULTI_LOOKUP = 0xD0;
exports.OP_SUBDOC_MULTI_MUTATION = 0xD1;
exports.OP_SUBDOC_GET_COUNT = 0xD2;
exports.OP_SCRUB = 0xF0;
exports.OP_ISASL_REFRESH = 0xF1;
exports.OP_SSL_CERTS_REFRESH = 0xF2;
exports.OP_GET_CMD_TIMER = 0xF3;
exports.OP_SET_CTRL_TOKEN = 0xF4;
exports.OP_GET_CTRL_TOKEN = 0xF5;
exports.OP_INIT_COMPLETE = 0xF6;

// Named "No Error" in the memcache docs but this seems like it will be clearer
exports.RESPONSE_STATUS_SUCCCESS = 0x00;
exports.RESPONSE_STATUS_KEY_NOT_FOUND = 0x01;
exports.RESPONSE_STATUS_KEY_EXISTS = 0x02;